<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "coupon".
 *
 * @property integer $id
 * @property string $descr
 * @property string $coupon
 * @property integer $created_at
 * @property integer $used_at
 * @property integer $status
 * @property integer $valide_at
 * @property integer $type
 * @property double $minimum
 * @property double $subtract
 * @property integer $discount
 */
class Coupon extends \yii\db\ActiveRecord
{
    const STATUS_USED=2;
    const STATUS_ACTIVE=1;
    const STATUS_OVERTIME=3;
    public $batch_count;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'coupon';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['coupon', 'created_at', 'valide_at'], 'required'],
            [['created_at', 'used_at', 'status', 'type', 'discount','batch_count'], 'integer'],
            [['minimum', 'subtract',], 'number','min'=>0],
            [['batch_count','discount'],'integer','min'=>0],
            [['descr'], 'string', 'max' => 500],
            [['coupon'], 'string', 'max' => 10],
            [['valide_at'],'safe']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'descr' => Yii::t('app', '描述'),
            'coupon' => Yii::t('app', '优惠券'),
            'created_at' => Yii::t('app', '创建时间'),
            'used_at' => Yii::t('app', '使用时间'),
            'status' => Yii::t('app', '状态'),
            'valide_at' => Yii::t('app', '有效期至'),
            'type' => Yii::t('app', '类型'),
            'minimum' => Yii::t('app', '最低消费'),
            'subtract' => Yii::t('app', '满减/抵现'),
            'discount' => Yii::t('app', '折扣'),
            'batch_count'=>Yii::t('app','数量'),
        ];
    }
    public function creatCoupon($length){
        $str="";
        $strPol="ABCDEFGHIJKLMNOPQRSTUVWXYZ0987654321abcdefghijklmnopqrstuvwxyz";
        $max=strlen($strPol)-1;
        for($i=0;$i<$length;$i++){
            $str.=$strPol[rand(0,$max)];//rand($min,$max)生成介于min和max两个数之间的一个随机整数 
        }
        return strtoupper($str);
    }
   public function save($runValidation = true, $attributeNames = null)
   {
       if($this->isNewRecord){
           $this->setAttribute('created_at',time());
           $this->setAttribute('coupon',$this->creatCoupon(8));
           $this->setAttribute('status',self::STATUS_ACTIVE);
       }
       $this->setAttribute('valide_at',strtotime($this->valide_at));
       return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
   }
    public function batchSave($runValidation = true, $attributeNames = null){
        try {
            $descr = $this->descr;
            $valide_at = $this->valide_at;
            for ($i = 0; $i < $this->batch_count; $i++) {
                $model = new Coupon();
                $model->descr = $descr;
                $model->valide_at = $valide_at;
                $model->created_at = time();
                $model->status = self::STATUS_ACTIVE;
                $model->save();
            }
            return true;
        } catch (Exception $e) {
            return false;
        }
    }
}
